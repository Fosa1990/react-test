{"version":3,"sources":["logo.svg","components/Form/Form.js","components/LoginForm/LoginForm.js","components/SignUpForm/SignUpForm.js","components/SignUpFormCheckbox/SignUpFormCheckbox.js","components/RadioButtons/RadioButtons.js","components/SignUpFormFinal/SignUpFormFinal.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","state","input","submit","items","handleChange","bind","handleSubmit","todoSubmit","clearFields","handleTodoSubmit","event","this","setState","target","value","preventDefault","onSubmit","onChange","type","onClick","map","item","index","Component","LoginForm","login","e","evt","console","log","placeholder","INITIAL_STATE","email","password","SignUpForm","name","reset","agreed","SignUpFormCheckbox","checked","disabled","Gender","gender","RadioButtons","SignUpFormFinal","age","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb3d70f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\n\nexport class Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      submit: '',\n      items: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.todoSubmit = this.todoSubmit.bind(this);\n    this.clearFields = this.clearFields.bind(this);\n    this.handleTodoSubmit = this.handleTodoSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      input: event.target.value,\n    });\n  }\n\n  // var 1 [ 1 method = 1 action ] start\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      submit: this.state.input,\n    });\n  }\n\n  todoSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      input: this.state.input,\n      items: [...this.state.items, this.state.input],\n    });\n  }\n  // var 1 [ 1 method = 1 action ] end\n\n  // var 2 [ 1 method = 2 actions ] start\n  handleTodoSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      input: this.state.input,\n      submit: this.state.input,\n      items: [...this.state.items, this.state.input],\n    });\n  }\n  // var 2 [ 1 method = 2 actions ] end\n\n  clearFields() {\n    this.setState({\n      input: '',\n      submit: '',\n      items: [],\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleTodoSubmit}>\n          <input\n            value={this.state.input}\n            onChange={this.handleChange}\n            type=\"text\"\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <button onClick={this.clearFields} type=\"button\">\n          Clear All\n        </button>\n        <h3>Input: {this.state.input}</h3>\n        <h3>Submit: {this.state.submit}</h3>\n        <ul>\n          {this.state.items.map((item, index) => (\n            <li key={index}>{item}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n  state = {\n    login: '',\n  };\n\n  /*\n   * Отвечает за обновление состояния\n   */\n  handleChange = e => {\n    this.setState({ login: e.target.value });\n  };\n\n  /*\n   * Вызывается при отправке формы\n   */\n  handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(`Signed up as: ${this.state.login}`);\n\n    // Проп который передается форме для вызова при сабмите\n    this.props.onSubmit(this.state.login);\n  };\n\n  render() {\n    const { login } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Enter login\"\n            value={login}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Sign up as {login}</button>\n      </form>\n    );\n  }\n}\nexport default LoginForm;\n","import React, { Component } from 'react';\n\n/*\n * Выносим объект с примитивами в константу чтобы было удобно сбрасывать.\n * Нельзя использовать если в каком-то свойстве состояния хранится сложный тип.\n */\nconst INITIAL_STATE = {\n  login: '',\n  email: '',\n  password: '',\n};\n\nclass SignUpForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  /*\n   * Для всех инпутов создаем один обарботчик\n   * Различать инпуты будем по атрибуту name\n   */\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n\n    const { login, email, password } = this.state;\n\n    console.log(`\n      Login: ${login}\n      Email: ${email}\n      Password: ${password}\n    `);\n\n    // Проп который передается форме для вызова при сабмите\n    // this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { login, email, password } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Enter login\"\n            name=\"login\"\n            value={login}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Email\n          <input\n            type=\"email\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            placeholder=\"Enter password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Sign up as {login}</button>\n      </form>\n    );\n  }\n}\n\nexport default SignUpForm;\n","import React, { Component } from 'react';\n\nconst INITIAL_STATE = {\n  login: '',\n  email: '',\n  password: '',\n  agreed: false,\n};\n\nclass SignUpFormCheckbox extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  /*\n   * Для всех инпутов создаем один обарботчик\n   * Различать инпуты будем по атрибуту name\n   */\n  handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n\n    // Если тип элемента checkbox, берем значение checked,\n    // в противном случае value\n    this.setState({ [name]: type === 'checkbox' ? checked : value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { login, email, password, agreed } = this.state;\n\n    console.log(`\n      Login: ${login}\n      Email: ${email}\n      Password: ${password}\n      Agreed: ${agreed}\n    `);\n\n    // Проп который передается форме для вызова при сабмите\n    // this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { login, email, password, agreed } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Enter login\"\n            name=\"login\"\n            value={login}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Email\n          <input\n            type=\"email\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            placeholder=\"Enter password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Agree to terms\n          <input\n            type=\"checkbox\"\n            name=\"agreed\"\n            checked={agreed}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\" disabled={!agreed}>\n          Sign up as {login}\n        </button>\n      </form>\n    );\n  }\n}\nexport default SignUpFormCheckbox;\n","import React, { Component } from 'react';\n\n/*\n * Используем Enumerable чтобы не болеть антипаттерном \"магические числа\"\n */\nconst Gender = {\n  MALE: 'male',\n  FEMALE: 'female',\n};\n\nconst INITIAL_STATE = {\n  login: '',\n  email: '',\n  password: '',\n  agreed: false,\n  gender: null,\n};\n\nclass RadioButtons extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  /*\n   * Для всех инпутов создаем один обарботчик\n   * Различать инпуты будем по атрибуту name\n   */\n  handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n\n    // Если тип элемента checkbox, берем значение checked,\n    // в противном случае value\n    this.setState({ [name]: type === 'checkbox' ? checked : value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { login, email, password, agreed, gender } = this.state;\n\n    console.log(`\n      Login: ${login}\n      Email: ${email}\n      Password: ${password}\n      Agreed: ${agreed}\n      Gender: ${gender}\n    `);\n\n    // Проп который передается форме для вызова при сабмите\n    // this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { login, email, password, agreed, gender } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <section>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              placeholder=\"Enter login\"\n              name=\"login\"\n              value={login}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Email\n            <input\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Password\n            <input\n              type=\"password\"\n              placeholder=\"Enter password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Agree to terms\n            <input\n              type=\"checkbox\"\n              name=\"agreed\"\n              checked={agreed}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <h2>Choose your gender</h2>\n          <label>\n            Male\n            <input\n              type=\"radio\"\n              checked={gender === Gender.MALE}\n              name=\"gender\"\n              value={Gender.MALE}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Female\n            <input\n              type=\"radio\"\n              checked={gender === Gender.FEMALE}\n              name=\"gender\"\n              value={Gender.FEMALE}\n              onChange={this.handleChange}\n            />\n          </label>\n        </section>\n\n        <button type=\"submit\" disabled={!agreed}>\n          Sign up as {login}\n        </button>\n      </form>\n    );\n  }\n}\nexport default RadioButtons;\n","import React, { Component } from 'react';\n\n/*\n * Используем Enumerable чтобы не болеть антипаттерном \"магические числа\"\n */\nconst Gender = {\n  MALE: 'male',\n  FEMALE: 'female',\n};\n\nconst INITIAL_STATE = {\n  login: '',\n  email: '',\n  password: '',\n  agreed: false,\n  gender: null,\n};\n\nclass SignUpFormFinal extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  /*\n   * Для всех инпутов создаем один обарботчик\n   * Различать инпуты будем по атрибуту name\n   */\n  handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n\n    // Если тип элемента checkbox, берем значение checked,\n    // в противном случае value\n    this.setState({ [name]: type === 'checkbox' ? checked : value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { login, email, password, agreed, gender, age } = this.state;\n\n    console.log(`\n      Login: ${login}\n      Email: ${email}\n      Password: ${password}\n      Agreed: ${agreed}\n      Gender: ${gender}\n      Age: ${age}\n    `);\n\n    // Проп который передается форме для вызова при сабмите\n    // this.props.onSubmit(this.state);\n    // console.log('this.state: ', this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { login, email, password, agreed, gender, age } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <section>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              placeholder=\"Enter login\"\n              name=\"login\"\n              value={login}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Email\n            <input\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Password\n            <input\n              type=\"password\"\n              placeholder=\"Enter password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <h2>Choose your gender</h2>\n          <label>\n            Male\n            <input\n              type=\"radio\"\n              checked={gender === Gender.MALE}\n              name=\"gender\"\n              value={Gender.MALE}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Female\n            <input\n              type=\"radio\"\n              checked={gender === Gender.FEMALE}\n              name=\"gender\"\n              value={Gender.FEMALE}\n              onChange={this.handleChange}\n            />\n          </label>\n          <h2>Choose your age</h2>\n          <label>\n            Choose your age\n            <select name=\"age\" value={age} onChange={this.handleChange}>\n              <option value=\"\" disabled>\n                ...\n              </option>\n              <option value=\"18-25\">18-25</option>\n              <option value=\"26-35\">26-35</option>\n              <option value=\"36+\">36+</option>\n            </select>\n          </label>\n          <h2>Agree to terms</h2>\n          <label>\n            Agree to terms\n            <input\n              type=\"checkbox\"\n              name=\"agreed\"\n              checked={agreed}\n              onChange={this.handleChange}\n            />\n          </label>\n        </section>\n\n        <button type=\"submit\" disabled={!agreed}>\n          Sign up as {login}\n        </button>\n      </form>\n    );\n  }\n}\nexport default SignUpFormFinal;\n","import logo from './logo.svg';\nimport './App.css';\nimport Form from './components/Form/';\nimport LoginForm from './components/LoginForm';\nimport SignUpForm from './components/SignUpForm';\nimport SignUpFormCheckbox from './components/SignUpFormCheckbox';\nimport RadioButtons from './components/RadioButtons';\nimport SignUpFormFinal from './components/SignUpFormFinal';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Form></Form>\n        <hr />\n        <LoginForm></LoginForm>\n        <hr />\n        <SignUpForm></SignUpForm>\n        <hr />\n        <SignUpFormCheckbox></SignUpFormCheckbox>\n        <hr />\n        <RadioButtons></RadioButtons>\n        <hr />\n        <SignUpFormFinal></SignUpFormFinal>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}