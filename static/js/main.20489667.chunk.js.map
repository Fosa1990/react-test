{"version":3,"sources":["logo.svg","components/SignUpFormFinal/SignUpFormFinal.js","App.js","reportWebVitals.js","index.js"],"names":["Gender","INITIAL_STATE","login","email","password","agreed","gender","SignUpFormFinal","state","handleChange","target","name","value","type","checked","setState","handleSubmit","e","preventDefault","age","console","log","this","onSubmit","placeholder","onChange","disabled","Component","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAAe,G,MAAA,IAA0B,kC,yDCKnCA,EACE,OADFA,EAEI,SAGJC,EAAgB,CACpBC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,QAAQ,EACRC,OAAQ,MAGJC,E,4MACJC,M,eACKP,G,EAOLQ,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QAI3B,EAAKC,SAAL,eAAiBJ,EAAgB,aAATE,EAAsBC,EAAUF,K,EAG1DI,aAAe,SAAAC,GACbA,EAAEC,iBAEF,MAAwD,EAAKV,MAArDN,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,OAAQC,EAAxC,EAAwCA,OAAQa,EAAhD,EAAgDA,IAEhDC,QAAQC,IAAR,yBACWnB,EADX,0BAEWC,EAFX,6BAGcC,EAHd,2BAIYC,EAJZ,2BAKYC,EALZ,wBAMSa,EANT,Y,4CAaF,WACE,MAAwDG,KAAKd,MAArDN,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,OAAQC,EAAxC,EAAwCA,OAAQa,EAAhD,EAAgDA,IAEhD,OACE,uBAAMI,SAAUD,KAAKN,aAArB,UACE,oCACE,yCAEE,uBACEH,KAAK,OACLW,YAAY,cACZb,KAAK,QACLC,MAAOV,EACPuB,SAAUH,KAAKb,kBAGnB,0CAEE,uBACEI,KAAK,QACLW,YAAY,cACZb,KAAK,QACLC,MAAOT,EACPsB,SAAUH,KAAKb,kBAGnB,6CAEE,uBACEI,KAAK,WACLW,YAAY,iBACZb,KAAK,WACLC,MAAOR,EACPqB,SAAUH,KAAKb,kBAInB,oDACA,yCAEE,uBACEI,KAAK,QACLC,QAASR,IAAWN,EACpBW,KAAK,SACLC,MAAOZ,EACPyB,SAAUH,KAAKb,kBAGnB,2CAEE,uBACEI,KAAK,QACLC,QAASR,IAAWN,EACpBW,KAAK,SACLC,MAAOZ,EACPyB,SAAUH,KAAKb,kBAGnB,iDACA,oDAEE,yBAAQE,KAAK,MAAMC,MAAOO,EAAKM,SAAUH,KAAKb,aAA9C,UACE,wBAAQG,MAAM,GAAGc,UAAQ,EAAzB,iBAGA,wBAAQd,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,MAAd,uBAGJ,gDACA,mDAEE,uBACEC,KAAK,WACLF,KAAK,SACLG,QAAST,EACToB,SAAUH,KAAKb,qBAKrB,yBAAQI,KAAK,SAASa,UAAWrB,EAAjC,wBACcH,Y,GAtHQyB,aA4HfpB,ICrHAqB,MAhBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAAC,EAAD,UCFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.20489667.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\n\r\n/*\r\n * Используем Enumerable чтобы не болеть антипаттерном \"магические числа\"\r\n */\r\nconst Gender = {\r\n  MALE: 'male',\r\n  FEMALE: 'female',\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  login: '',\r\n  email: '',\r\n  password: '',\r\n  agreed: false,\r\n  gender: null,\r\n};\r\n\r\nclass SignUpFormFinal extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  /*\r\n   * Для всех инпутов создаем один обарботчик\r\n   * Различать инпуты будем по атрибуту name\r\n   */\r\n  handleChange = ({ target }) => {\r\n    const { name, value, type, checked } = target;\r\n\r\n    // Если тип элемента checkbox, берем значение checked,\r\n    // в противном случае value\r\n    this.setState({ [name]: type === 'checkbox' ? checked : value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { login, email, password, agreed, gender, age } = this.state;\r\n\r\n    console.log(`\r\n      Login: ${login}\r\n      Email: ${email}\r\n      Password: ${password}\r\n      Agreed: ${agreed}\r\n      Gender: ${gender}\r\n      Age: ${age}\r\n    `);\r\n\r\n    // this.props.onSubmit({ ...this.state });\r\n    // this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { login, email, password, agreed, gender, age } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <section>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter login\"\r\n              name=\"login\"\r\n              value={login}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Email\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Password\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <h2>Choose your gender</h2>\r\n          <label>\r\n            Male\r\n            <input\r\n              type=\"radio\"\r\n              checked={gender === Gender.MALE}\r\n              name=\"gender\"\r\n              value={Gender.MALE}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Female\r\n            <input\r\n              type=\"radio\"\r\n              checked={gender === Gender.FEMALE}\r\n              name=\"gender\"\r\n              value={Gender.FEMALE}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <h2>Choose your age</h2>\r\n          <label>\r\n            Choose your age\r\n            <select name=\"age\" value={age} onChange={this.handleChange}>\r\n              <option value=\"\" disabled>\r\n                ...\r\n              </option>\r\n              <option value=\"18-25\">18-25</option>\r\n              <option value=\"26-35\">26-35</option>\r\n              <option value=\"36+\">36+</option>\r\n            </select>\r\n          </label>\r\n          <h2>Agree to terms</h2>\r\n          <label>\r\n            Agree to terms\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"agreed\"\r\n              checked={agreed}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n        </section>\r\n\r\n        <button type=\"submit\" disabled={!agreed}>\r\n          Sign up as {login}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default SignUpFormFinal;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport SignUpFormFinal from './components/SignUpFormFinal';\n// import RadioButtons from './components/RadioButtons';\n// import SignUpFormCheckbox from './components/SignUpFormCheckbox';\n// import SignUpForm from './components/SignUpForm';\n// import LoginForm from './components/LoginForm';\n// import Form from './components/Form/';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <SignUpFormFinal></SignUpFormFinal>\n        {/* <RadioButtons></RadioButtons> */}\n        {/* <SignUpFormCheckbox></SignUpFormCheckbox> */}\n        {/* <SignUpForm></SignUpForm> */}\n        {/* <LoginForm></LoginForm> */}\n        {/* <Form></Form> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}